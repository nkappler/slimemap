{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/long/dist/long.js","webpack:///./src/slimeMap.ts","webpack:///./src/ctxMenu.min.js","webpack:///./src/slimeChunk.ts","webpack:///./src/seededRandom.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","Long","low","high","unsigned","this","isLong","obj","__isLong__","configurable","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","isFinite","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","str","radix","length","Error","RangeError","indexOf","substring","radixToPower","result","size","min","parseInt","power","mul","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","toString","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","isPositive","isOdd","isEven","equals","other","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","b00","divide","divisor","approx","res","toUnsigned","shru","shr","shl","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","toSigned","toBytes","le","toBytesLE","toBytesBE","hi","lo","apply","long_1","__importStar","slimeChunk_1","getV2sfromAABB","aabb","p1","x","x1","y","y1","p2","x2","y2","getAABBfromV2s","origin","SlimeMap","id","config","_this","height","width","xPos","yPos","mousePos","__assign","zoom","minzoom","maxzoom","borderleft","bordertop","borderbottom","borderright","markers","controls","strokeColor","textColor","mapBackgroundColor","uiBackgroundColor","slimeChunkColor","markerDefaultColor","canvas","createDOM","window","ContextMenu","attach","cxm","coord","getMapCoord","getLabelDesc","marker","label","JSON","stringify","location","closestMarker","findClosestMarker","concat","text","action","showEditMarkerDialog","updatedMarker","deleteMarker","addMarker","isDivider","deleteAllMarkers","disabled","subMenu","map","gotoCoordinate","setAttribute","ctx","getContext","CanvasRenderingContext2D","assertEventHandlers","seed","default","Date","now","SCH","SlimeChunkHandler","updateSizes","redraw","onmousemove","event","offsetX","offsetY","buttons","movementX","movementY","drawFooter","onmousedown","_event","onmouseup","style","document","createElement","innerText","head","appendChild","setSeed","param1","coordinate","isVector2D","push","arg0","splice","includes","searchPos","maxRadius","Infinity","closestDistance","forEach","distance","sqrt","drawAllMarkers","_i","_a","strokeStyle","fillStyle","color","lineWidth","getAbsCoord","beginPath","moveTo","bezierCurveTo","arcTo","fill","stroke","closePath","font","textAlign","textWidth","measureText","fillRect","fillText","onSubmit","parent","parentElement","popup","display","gridTemplateColumns","padding","className","labelInput","labelLabel","colorInput","colorLabel","type","xposInput","xPosLabel","zposInput","zPosLabel","cancelBtn","submitBtn","bounding","getBounding","assign","position","margin","zIndex","background","top","offsetHeight","boxShadow","left","onclick","removeChild","Number","elem","container","cloneNode","visibility","body","getBoundingClientRect","loadFont","link","rel","href","setInterval","drawStaticUI","drawUI","setTimeout","clearInterval","getElementById","tagName","attributes","attr","parentNode","replaceChild","offsetWidth","renderControls","bottom","controlsdDiv","justifyContent","paddingRight","paddingLeft","boxSizing","lineHeight","seedDiv","seedInput","placeholder","seedButton","addEventListener","navDiv","xInput","zInput","navButton","jumpMarker","mousewheelevt","test","navigator","userAgent","evt","e","onscroll","attachEvent","pos","preventDefault","zoomfactor","detail","newPos","offset","calcChunkVP","v2s","vp","doMath","calcViewport","chunkvp","vec","clearfooter","toFixed","Chunk","Slimes","isSlimeChunk","From","ChunkToCoord","To","updateSlimeVP","drawSlimeChunks","drawGrid","clearBorderRight","vec2","factor","mark","lineTo","mapwidthcenter","mapheightcenter","isInVP","isOverMap","ignoreBorder","round","v","mapWidth","mapHeight","arg","f","isAABB","keys","a","b","TypeError","_classCallCheck","dir","closeMenu","arguments","querySelector","stopImmediatePropagation","menu","generateDOM","ctxmenu","handler","console","error","update","removeEventListener","delete","debounce","clearTimeout","itemIsDivider","innerHTML","title","tooltip","itemIsInteractive","itemIsSubMenu","itemIsAction","itemIsAnchor","target","openSubMenu","fontWeight","marginLeft","g","Element","h","getPosition","clientX","clientY","stopPropagation","innerWidth","innerHeight","readyState","insertBefore","childNodes","__importDefault","seededRandom_1","base","addend1","addend2","addend3","mask","chunk","updateSeed","zPos","tempseed","NSeededRandom","nextInt","nmultiplier","naddend","nmask","initseed","initialScramble","next","bits","bound","abs"],"mappings":"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","file":"slime.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","import Long, { fromString } from \"long\";\r\nimport \"./ctxMenu.min\";\r\nimport { SlimeChunkHandler } from \"./slimeChunk\";\r\n\r\nexport interface Vector2D {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface AABB {\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n}\r\n\r\nconst getV2sfromAABB = (aabb: AABB): { p1: Vector2D, p2: Vector2D } => {\r\n    return {\r\n        p1: { x: aabb.x1, y: aabb.y1 },\r\n        p2: { x: aabb.x2, y: aabb.y2 }\r\n    };\r\n};\r\n\r\nconst getAABBfromV2s = (p1: Vector2D, p2: Vector2D): AABB => {\r\n    return {\r\n        x1: p1.x,\r\n        y1: p1.y,\r\n        x2: p2.x,\r\n        y2: p2.y\r\n    };\r\n};\r\n\r\nconst origin: Vector2D = { x: 0, y: 0 };\r\n\r\ninterface Config {\r\n    seed?: string;\r\n    renderControls?: boolean;\r\n    bottom?: boolean;\r\n    mapBackgroundColor: string;\r\n    uiBackgroundColor: string;\r\n    slimeChunkColor: string;\r\n    strokeColor: string;\r\n    textColor: string;\r\n    markerDefaultColor: string;\r\n}\r\n\r\ninterface Controls {\r\n    seedInput: HTMLInputElement;\r\n    xInput: HTMLInputElement;\r\n    zInput: HTMLInputElement;\r\n}\r\n\r\ninterface Marker {\r\n    location: Vector2D;\r\n    label?: string;\r\n    color?: string;\r\n}\r\n\r\nexport class SlimeMap {\r\n    /** The maps seed */\r\n    private seed: Long;\r\n    /** canvas height */\r\n    private height = 0;\r\n    /** canvas width */\r\n    private width = 0;\r\n    /** x position on the map. (viewer/camera position) */\r\n    private xPos = 0;\r\n    /** y position on the map. (viewer/camera position) */\r\n    private yPos = 0;\r\n    /** the cursor Position (canvas coordinate system) */\r\n    private mousePos: Vector2D = { ...origin };\r\n    /** zoom factor. higher means larger area visible */\r\n    private zoom = 2.5;\r\n    private minzoom = 0.7;\r\n    private maxzoom = 5;\r\n    /** viewport: visible area on the map in coordinates (not px). slightly oversized to compensate for partly visible chunks. */\r\n    private vp!: AABB;\r\n    /** visible area on map in chunks. */\r\n    private chunkvp!: AABB;\r\n    /** the border on the left side between canvas and map edge. */\r\n    private borderleft = 70;\r\n    /** the border on the top side between canvas and map edge. */\r\n    private bordertop = 50;\r\n    /** the border on the bottom side between canvas and map edge. */\r\n    private borderbottom = 20;\r\n    /** the border on the left bottom between canvas and map edge. */\r\n    private borderright = 20;\r\n    private markers: Marker[] = [];\r\n    private canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n    private SCH: SlimeChunkHandler;\r\n    private config: Config;\r\n    private controls: Controls = undefined as any;\r\n    /** Reference to marker automatically placed by gotoCoordinates. */\r\n    private jumpMarker: Marker | undefined;\r\n\r\n    public constructor(id: string, config?: Partial<Config>) {\r\n        this.config = {\r\n            strokeColor: \"#000000\",\r\n            textColor: \"#000000\",\r\n            mapBackgroundColor: \"#e0e0e0\",\r\n            uiBackgroundColor: \"#CED4DE\",\r\n            slimeChunkColor: \"#44dd55\",\r\n            markerDefaultColor: \"#aa0000\",\r\n            ...config\r\n        };\r\n\r\n\r\n        this.canvas = this.createDOM(id);\r\n        window.ContextMenu.attach(\"#\" + this.canvas.id, [], (cxm) => {\r\n            const coord = this.getMapCoord(this.mousePos);\r\n            if (coord === false) {\r\n                return [];\r\n            }\r\n\r\n            const getLabelDesc = (marker: Marker) => marker.label ? `\"${marker.label}\"` : `at ${JSON.stringify(marker.location)}`\r\n\r\n            const closestMarker = this.findClosestMarker(coord, 40 / this.zoom); // increase search area the further zoomed out\r\n            if (closestMarker) {\r\n                const label = getLabelDesc(closestMarker);\r\n                cxm = cxm.concat([\r\n                    {\r\n                        text: `Marker ${label}:`\r\n                    },\r\n                    {\r\n                        text: `Edit marker ${label}`,\r\n                        action: () => {\r\n                            this.showEditMarkerDialog(closestMarker, (updatedMarker) => {\r\n                                this.deleteMarker(closestMarker);\r\n                                this.addMarker(updatedMarker);\r\n                            });\r\n                        }\r\n                    },\r\n                    {\r\n                        text: `Delete marker ${label}`,\r\n                        action: () => this.deleteMarker(closestMarker)\r\n                    },\r\n                    { isDivider: true }\r\n                ]);\r\n            }\r\n\r\n            cxm = cxm.concat([\r\n                {\r\n                    text: \"Add marker\",\r\n                    action: () => {\r\n                        this.showEditMarkerDialog({\r\n                            location: coord\r\n                        }, (marker) => {\r\n                            this.addMarker(marker);\r\n                        });\r\n                    }\r\n                },\r\n                {\r\n                    text: \"Delete all markers\",\r\n                    action: () => {\r\n                        this.deleteAllMarkers();\r\n                    },\r\n                    disabled: this.markers.length === 0\r\n                },\r\n                {\r\n                    text: \"Go to marker\",\r\n                    subMenu: this.markers.map((marker): CTXMItem => ({\r\n                        text: getLabelDesc(marker),\r\n                        action: () => this.gotoCoordinate(marker.location)\r\n                    })),\r\n                    disabled: this.markers.length === 0\r\n                }\r\n            ]);\r\n            return cxm;\r\n        });\r\n\r\n        this.canvas.setAttribute(\"style\", \"cursor: grab; cursor: -webkit-grab\");\r\n        const ctx = this.canvas.getContext(\"2d\");\r\n        this.ctx = ctx ? ctx : new CanvasRenderingContext2D();\r\n        this.assertEventHandlers();\r\n\r\n        this.seed = !!this.config.seed ? fromString(this.config.seed) : new Long(Date.now());\r\n        this.SCH = new SlimeChunkHandler(this.seed);\r\n        this.updateSizes();\r\n        // this.drawStaticUI();\r\n        this.redraw();\r\n\r\n        this.canvas.onmousemove = (event: MouseEvent) => {\r\n            this.mousePos = { x: event.offsetX, y: event.offsetY };\r\n            if (event.buttons === 1) {\r\n                this.xPos -= event.movementX / this.zoom;\r\n                this.yPos -= event.movementY / this.zoom;\r\n                this.redraw();\r\n            } else {\r\n                this.drawFooter();\r\n            }\r\n        };\r\n\r\n        this.canvas.onmousedown = (_event: MouseEvent) => {\r\n            const vec = this.getMapCoord(this.mousePos);\r\n            if (vec) {\r\n                this.canvas.setAttribute(\"style\", \"cursor: grabbing; cursor: -webkit-grabbing\");\r\n            }\r\n        };\r\n\r\n        this.canvas.onmouseup = (_event: MouseEvent) => {\r\n            this.canvas.setAttribute(\"style\", \"cursor: grab; cursor: -webkit-grab\");\r\n        };\r\n\r\n        const style = document.createElement(\"style\");\r\n        style.innerText = `\r\n            .ctxmenu {\r\n                background-color: ${this.config.uiBackgroundColor};\r\n                box-shadow: 3px 3px 15px;\r\n            }\r\n\r\n            .ctxmenu li.disabled {\r\n                color: #999;\r\n            }\r\n\r\n            .dialog {\r\n                font-family: 'Montserrat';\r\n            }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n\r\n    public setSeed(seed: string) {\r\n        this.seed = fromString(seed);\r\n        this.SCH = new SlimeChunkHandler(this.seed);\r\n        this.redraw();\r\n    }\r\n\r\n    public gotoCoordinate(x: number, y: number);\r\n    public gotoCoordinate(coordinate: Vector2D);\r\n    public gotoCoordinate(param1: number | Vector2D, y?: number) {\r\n        const coordinate = this.isVector2D(param1) ? param1 : { x: param1, y: y as number };\r\n        this.xPos = coordinate.x;\r\n        this.yPos = coordinate.y;\r\n        this.redraw();\r\n    }\r\n\r\n    public addMarker(marker: Marker) {\r\n        this.markers.push(marker);\r\n        this.redraw();\r\n    }\r\n\r\n    public deleteAllMarkers() {\r\n        this.markers = [];\r\n        this.redraw();\r\n    }\r\n\r\n    public deleteMarker(index: number): boolean;\r\n    public deleteMarker(marker: Marker): boolean;\r\n    public deleteMarker(arg0: number | Marker): boolean {\r\n        if (typeof arg0 === \"number\") {\r\n            if (arg0 < this.markers.length) {\r\n                this.markers.splice(arg0, 1);\r\n                this.redraw();\r\n                return true;\r\n            }\r\n        }\r\n        else if (this.markers.includes(arg0)) {\r\n            this.markers.splice(this.markers.indexOf(arg0), 1);\r\n            this.redraw();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public findClosestMarker(searchPos: Vector2D, maxRadius: number = Infinity): Marker | undefined {\r\n        if (this.markers.length === 0) {\r\n            return undefined;\r\n        }\r\n        let closestMarker: Marker | undefined;\r\n        let closestDistance: number = Infinity;\r\n        this.markers.forEach(marker => {\r\n            //Pythagoras\r\n            const distance = Math.sqrt(\r\n                Math.pow(marker.location.x - searchPos.x, 2) +\r\n                Math.pow(marker.location.y - searchPos.y, 2)\r\n            );\r\n            if (distance < maxRadius && distance < closestDistance) {\r\n                closestDistance = distance;\r\n                closestMarker = marker;\r\n            }\r\n        });\r\n\r\n        return closestMarker;\r\n    }\r\n\r\n    private drawAllMarkers() {\r\n        for (const marker of this.markers) {\r\n            this.ctx.strokeStyle = this.config.strokeColor;\r\n            this.ctx.fillStyle = marker.color || this.config.markerDefaultColor;\r\n            this.ctx.lineWidth = 1;\r\n            const coord = this.getAbsCoord(marker.location, true);\r\n\r\n            const { x, y } = coord;\r\n\r\n            const size = 32;\r\n\r\n            const height = size;\r\n            const width = 2 * height / 3;\r\n\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(x, y);\r\n            this.ctx.bezierCurveTo(x - width / 8, y - width / 16 * 9, x - width / 2, y - width / 16 * 9, x - width / 2, y - width);\r\n            this.ctx.arcTo(x - width / 2, y - height, x, y - height, width / 2);\r\n            this.ctx.arcTo(x + width / 2, y - height, x + width / 2, y - width, width / 2);\r\n            this.ctx.bezierCurveTo(x + width / 2, y - width / 16 * 9, x + width / 8, y - width / 16 * 9, x, y);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n\r\n            this.ctx.fill();\r\n\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n\r\n            if (marker.label) {\r\n                this.ctx.font = \"normal 15px 'Montserrat'\";\r\n                this.ctx.textAlign = \"center\";\r\n                const textWidth = this.ctx.measureText(marker.label).width;\r\n                this.ctx.fillStyle = \"rgba(206,212,222,0.7)\";\r\n                this.ctx.fillRect(x - textWidth / 2 - 3, y - size - 30, textWidth + 6, 21);\r\n                this.ctx.fillStyle = this.config.textColor;\r\n                this.ctx.fillText(marker.label, x, y - size - 15);\r\n                this.ctx.textAlign = \"left\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param marker the default marker properties\r\n     * @param onSubmit callback when the dialog is submitted\r\n     */\r\n    private showEditMarkerDialog(marker: Marker, onSubmit: (marker: Marker) => void) {\r\n        const parent = this.canvas.parentElement;\r\n        if (!parent) {\r\n            throw (\"Canvas has no parent\");\r\n        }\r\n\r\n        const popup = document.createElement(\"div\");\r\n        popup.style.display = \"grid\";\r\n        popup.style.gridTemplateColumns = \"auto auto\";\r\n        popup.style.padding = \"15px\";\r\n        popup.className = \"dialog\";\r\n\r\n        const labelInput = document.createElement(\"input\");\r\n        const labelLabel = document.createElement(\"label\");\r\n        labelInput.value = marker.label || \"New Marker\";\r\n        labelLabel.innerText = \"Marker Label:\"\r\n        popup.appendChild(labelLabel);\r\n        popup.appendChild(labelInput);\r\n\r\n        const colorInput = document.createElement(\"input\");\r\n        const colorLabel = document.createElement(\"label\");\r\n        colorInput.type = \"color\";\r\n        colorInput.value = marker.color || this.config.markerDefaultColor\r\n        colorLabel.innerText = \"Marker Color:\"\r\n        popup.appendChild(colorLabel);\r\n        popup.appendChild(colorInput);\r\n\r\n        const xposInput = document.createElement(\"input\");\r\n        const xPosLabel = document.createElement(\"label\");\r\n        xposInput.type = \"number\";\r\n        xposInput.value = marker.location.x + \"\";\r\n        xPosLabel.innerText = \"Marker X Position:\"\r\n        popup.appendChild(xPosLabel);\r\n        popup.appendChild(xposInput);\r\n\r\n        const zposInput = document.createElement(\"input\");\r\n        const zPosLabel = document.createElement(\"label\");\r\n        zposInput.type = \"number\";\r\n        zposInput.value = marker.location.y + \"\";\r\n        zPosLabel.innerText = \"Marker Z Position:\"\r\n        popup.appendChild(zPosLabel);\r\n        popup.appendChild(zposInput);\r\n\r\n        const cancelBtn = document.createElement(\"button\");\r\n        cancelBtn.innerText = \"Cancel\";\r\n        popup.appendChild(cancelBtn);\r\n\r\n        const submitBtn = document.createElement(\"button\");\r\n        submitBtn.innerText = \"Submit\";\r\n        popup.appendChild(submitBtn);\r\n\r\n        const bounding = SlimeMap.getBounding(popup);\r\n\r\n        Object.assign<CSSStyleDeclaration, Partial<CSSStyleDeclaration>>(popup.style, {\r\n            position: \"relative\",\r\n            margin: \"auto\",\r\n            zIndex: \"999\",\r\n            background: this.config.uiBackgroundColor,\r\n            top: ((-parent.offsetHeight - bounding.height) * 0.5) + \"px\",\r\n            width: \"300px\",\r\n            boxShadow: `${this.config.strokeColor} 3px 3px 15px`,\r\n            left: `${this.borderleft - this.borderright}px`\r\n        });\r\n\r\n        parent.appendChild(popup);\r\n\r\n        submitBtn.onclick = () => {\r\n            parent.removeChild(popup);\r\n            marker = {\r\n                label: labelInput.value,\r\n                color: colorInput.value,\r\n                location: {\r\n                    x: Number(xposInput.value),\r\n                    y: Number(zposInput.value)\r\n                }\r\n            }\r\n            onSubmit(marker);\r\n        }\r\n\r\n        cancelBtn.onclick = () => {\r\n            parent.removeChild(popup);\r\n        }\r\n    }\r\n\r\n    private static getBounding(elem: HTMLElement): ClientRect | DOMRect {\r\n        const container = elem.cloneNode(true) as HTMLElement;\r\n        container.style.visibility = \"hidden\";\r\n        document.body.appendChild(container);\r\n        const result = container.getBoundingClientRect();\r\n        document.body.removeChild(container);\r\n        return result;\r\n    }\r\n\r\n    private loadFont() {\r\n        const link = document.createElement('link');\r\n        link.rel = 'stylesheet';\r\n        link.type = 'text/css';\r\n        link.href = 'https://fonts.googleapis.com/css?family=Montserrat:300,400';\r\n        document.head.appendChild(link);\r\n\r\n        //rerender a few times for the first few seconds,\r\n        const i = setInterval(() => {\r\n            this.drawStaticUI();\r\n            this.drawUI();\r\n        }, 100);\r\n        setTimeout(() => clearInterval(i), 2000);\r\n    }\r\n\r\n    private createDOM(id: string): HTMLCanvasElement {\r\n        this.loadFont();\r\n\r\n        const parent = document.getElementById(id);\r\n        if (!parent) {\r\n            throw (new Error(\"Element not found.\"));\r\n        }\r\n        const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n\r\n        let container: HTMLElement;\r\n        if (parent.tagName === \"CANVAS\") {\r\n            container = document.createElement(\"div\");\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < parent.attributes.length; i++) {\r\n                const attr = parent.attributes[i];\r\n                if (attr.name === \"width\" || attr.name === \"height\") {\r\n                    container.style[attr.name] = attr.value;\r\n                }\r\n                container.setAttribute(attr.name, attr.value);\r\n            }\r\n            container.appendChild(canvas);\r\n\r\n            const pparent = parent.parentNode || document.body;\r\n            pparent.replaceChild(container, parent);\r\n        } else {\r\n            container = parent;\r\n            container.appendChild(canvas);\r\n        }\r\n\r\n        container.style.position = \"relative\";\r\n        canvas.width = container.offsetWidth;\r\n        canvas.height = container.offsetHeight;\r\n        canvas.id = parent.id ? parent.id + \"canvas\" : \"slimemap-canvas\";\r\n\r\n        if (this.config.renderControls) {\r\n            const height = this.renderControls(container, this.config.bottom);\r\n            this.borderbottom += this.config.bottom ? height : 0;\r\n            this.bordertop += this.config.bottom ? 0 : height;\r\n        }\r\n\r\n        return canvas as HTMLCanvasElement;\r\n    }\r\n\r\n    private renderControls(container: HTMLElement, bottom: boolean = false) {\r\n        const controlsdDiv = document.createElement(\"div\");\r\n        const height = \"28px\";\r\n        Object.assign<CSSStyleDeclaration, Partial<CSSStyleDeclaration>>(controlsdDiv.style, {\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"space-between\",\r\n            position: \"absolute\",\r\n            bottom: bottom ? \"0px\" : \"auto\",\r\n            top: bottom ? \"auto\" : height,\r\n            paddingRight: this.borderright + \"px\",\r\n            paddingLeft: this.borderleft + \"px\",\r\n            boxSizing: \"border-box\",\r\n            height,\r\n            lineHeight: height\r\n        });\r\n\r\n        const seedDiv = document.createElement(\"div\");\r\n        const seedInput: HTMLInputElement = document.createElement(\"input\");\r\n        seedInput.type = \"text\";\r\n        seedInput.placeholder = \"enter seed\";\r\n        const seedButton = document.createElement(\"button\");\r\n        seedButton.innerText = \"Find Slimes\";\r\n        seedButton.addEventListener(\"click\", () => {\r\n            this.setSeed(seedInput.value);\r\n            seedInput.value = \"\";\r\n        });\r\n        seedDiv.appendChild(seedInput);\r\n        seedDiv.appendChild(seedButton);\r\n\r\n        const navDiv = document.createElement(\"div\");\r\n        const xInput: HTMLInputElement = document.createElement(\"input\");\r\n        xInput.type = \"text\";\r\n        xInput.placeholder = \"X\";\r\n        xInput.style.width = \"100px\";\r\n        const zInput: HTMLInputElement = document.createElement(\"input\");\r\n        zInput.type = \"text\";\r\n        zInput.placeholder = \"Z\";\r\n        zInput.style.width = \"100px\";\r\n        const navButton = document.createElement(\"button\");\r\n        navButton.innerText = \"go to coordinates\";\r\n        navButton.addEventListener(\"click\", () => {\r\n            const coordinate: Vector2D = { x: Number(xInput.value), y: Number(zInput.value) };\r\n            if (this.jumpMarker) {\r\n                this.deleteMarker(this.jumpMarker);\r\n            }\r\n            this.jumpMarker = { location: coordinate, label: `( X: ${coordinate.x} / Z: ${coordinate.y} )` };\r\n            this.addMarker(this.jumpMarker);\r\n            this.gotoCoordinate(coordinate);\r\n            xInput.value = \"\";\r\n            zInput.value = \"\";\r\n        });\r\n        navDiv.appendChild(xInput);\r\n        navDiv.appendChild(zInput);\r\n        navDiv.appendChild(navButton);\r\n\r\n\r\n        controlsdDiv.appendChild(seedDiv);\r\n        controlsdDiv.appendChild(navDiv);\r\n        container.appendChild(controlsdDiv);\r\n        this.controls = {\r\n            seedInput,\r\n            xInput,\r\n            zInput\r\n        };\r\n\r\n        return controlsdDiv.offsetHeight;\r\n    }\r\n\r\n    private assertEventHandlers() {\r\n        const mousewheelevt = (/Firefox/i.test(navigator.userAgent)) ? \"DOMMouseScroll\" : \"mousewheel\"; //FF doesn't recognize mousewheel as of FF3.x\r\n        const evt = (e) => this.onscroll(e);\r\n\r\n        if ((this.canvas as any).attachEvent) {//if IE (and Opera depending on user setting)\r\n            (this.canvas as any).attachEvent(\"on\" + mousewheelevt, evt);\r\n        }\r\n        else if (this.canvas.addEventListener) {//WC3 browsers\r\n            this.canvas.addEventListener(mousewheelevt, evt, false);\r\n        }\r\n    }\r\n\r\n    private onscroll(event: WheelEvent) {\r\n        const pos = this.getMapCoord(this.mousePos);\r\n        if (pos) {\r\n            event.preventDefault();\r\n            let zoomfactor = 0.2;\r\n            if (this.zoom < 2) {\r\n                zoomfactor /= 2;\r\n            }\r\n            const direction = event.detail > 0 ? -1 : 1;\r\n            zoomfactor *= direction;\r\n\r\n            if ((this.zoom + zoomfactor) >= this.minzoom && (this.zoom + zoomfactor) <= this.maxzoom) {\r\n                // zoom should be based on cursor position, i.e. the map position under the cursor should not change\r\n                // during scroll. this means we can calc the offset of the positions before and after scrolling and apply\r\n                // it to the position.\r\n                this.zoom += zoomfactor;\r\n                this.updateSizes();\r\n                const newPos = this.getMapCoord(this.mousePos) as Vector2D;\r\n                const offset = {\r\n                    x: pos.x - newPos.x,\r\n                    y: pos.y - newPos.y\r\n                };\r\n                this.xPos += offset.x;\r\n                this.yPos += offset.y;\r\n\r\n                this.redraw();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * calculates the visible map area in chunk representation.\r\n     * Result is slightly oversized to account for partially visible chunks.\r\n     */\r\n    private calcChunkVP(): AABB {\r\n        const v2s = getV2sfromAABB(this.vp);\r\n        return getAABBfromV2s(\r\n            this.doMath(v2s.p1, c => Math.floor(c / 16)),\r\n            this.doMath(v2s.p2, c => Math.ceil(c / 16))\r\n        );\r\n    }\r\n\r\n    private updateSizes() {\r\n        this.width = this.canvas.width;\r\n        this.height = this.canvas.height;\r\n        this.vp = this.calcViewport();\r\n        this.chunkvp = this.calcChunkVP();\r\n    }\r\n\r\n    private drawFooter() {\r\n        const vec = this.getMapCoord(this.mousePos);\r\n        if (vec) {\r\n            this.clearfooter();\r\n            this.ctx.font = \"normal 15px 'Montserrat'\";\r\n            this.ctx.fillStyle = this.config.textColor;\r\n            this.ctx.fillText(\"X: \" + vec.x.toFixed(0) + \"\\t Z: \" + vec.y.toFixed(0), this.borderleft, this.height - this.borderbottom + 15);\r\n\r\n            const Chunk = this.doMath(vec, c => Math.floor(c / 16));\r\n            const Slimes = this.SCH.isSlimeChunk(Chunk) ? \"ja\" : \"nein\";\r\n            this.ctx.fillText(\"Slimes: \" + Slimes, this.borderleft + 200, this.height - this.borderbottom + 15);\r\n\r\n            const From = this.ChunkToCoord(Chunk);\r\n            const To = this.doMath(From, c => c + 15);\r\n\r\n            this.ctx.textAlign = \"end\";\r\n            this.ctx.fillText(\"Chunk: ( \" + Chunk.x + \" / \" + Chunk.y + \" )  im Bereich von: ( \" +\r\n                From.x + \" / \" + From.y + \")  bis: ( \" +\r\n                To.x + \" / \" + To.y + \" )\", this.width - this.borderright, this.height - this.borderbottom + 15);\r\n            this.ctx.textAlign = \"start\";\r\n        }\r\n    }\r\n\r\n    private clearfooter() {\r\n        this.ctx.fillStyle = this.config.uiBackgroundColor;\r\n        this.ctx.fillRect(this.borderleft - 1, this.height - this.borderbottom, this.width - this.borderleft, this.borderbottom);\r\n    }\r\n\r\n    private redraw() {\r\n        this.vp = this.calcViewport();\r\n\r\n        //fill map\r\n        this.ctx.fillStyle = this.config.mapBackgroundColor;\r\n        this.ctx.fillRect(this.borderleft, this.bordertop, this.width - this.borderleft - this.borderright, this.height - this.bordertop - this.borderbottom);\r\n\r\n        //UI\r\n        this.updateSlimeVP();\r\n        this.drawSlimeChunks();\r\n        this.drawGrid();\r\n        this.drawAllMarkers();\r\n\r\n        this.clearBorderRight();\r\n        this.clearfooter();\r\n        this.drawStaticUI();\r\n        this.drawUI();\r\n    }\r\n\r\n    private updateSlimeVP() {\r\n        if (JSON.stringify(this.chunkvp) !== JSON.stringify(this.calcChunkVP())) {\r\n            this.chunkvp = this.calcChunkVP();\r\n        }\r\n    }\r\n\r\n    private drawSlimeChunks() {\r\n        this.ctx.fillStyle = this.config.slimeChunkColor;\r\n\r\n        for (let x = this.chunkvp.x1; x < this.chunkvp.x2; x++) {\r\n            for (let y = this.chunkvp.y1; y < this.chunkvp.y2; y++) {\r\n                if (this.SCH.isSlimeChunk({ x, y })) {\r\n                    const vec = this.ChunkToCoord({ x, y });\r\n\r\n                    let vec2 = this.getAbsCoord(vec);\r\n                    if (vec2) {\r\n                        this.ctx.fillRect(vec2.x + 1, vec2.y + 1, 16 * this.zoom - 1, 16 * this.zoom - 1);\r\n                        continue;\r\n                    }\r\n                    //slime chunk may be partially on map (overlap in x direction)\r\n                    vec2 = this.getAbsCoord({ x: vec.x + 16, y: vec.y });\r\n                    if (vec2) {\r\n                        this.ctx.fillRect(vec2.x - 16 * this.zoom, vec2.y, 16 * this.zoom - 1, 16 * this.zoom - 1);\r\n                        continue;\r\n                    }\r\n                    //slime chunk may be partially on map (overlap in y direction)\r\n                    vec2 = this.getAbsCoord({ x: vec.x, y: vec.y + 16 });\r\n                    if (vec2) {\r\n                        this.ctx.fillRect(vec2.x, vec2.y - 16 * this.zoom, 16 * this.zoom - 1, 16 * this.zoom - 1);\r\n                        continue;\r\n                    }\r\n                    //slime chunk may be partially on map (overlap in both directions)\r\n                    vec2 = this.getAbsCoord({ x: vec.x + 16, y: vec.y + 16 });\r\n                    if (vec2) {\r\n                        this.ctx.fillRect(vec2.x - 16 * this.zoom, vec2.y - 16 * this.zoom, 16 * this.zoom - 1, 16 * this.zoom - 1);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawUI() {\r\n        let factor = 16;\r\n        if (this.zoom < 2) { factor *= 2; }\r\n        if (this.zoom < 0.9) { factor *= 2; }\r\n        this.ctx.font = \"normal 12px 'Montserrat'\";\r\n        this.ctx.fillStyle = this.config.textColor;\r\n        //X\r\n        for (let i = Math.ceil(this.vp.x1 / factor); i <= Math.floor(this.vp.x2 / factor); i++) {\r\n            const mark = i * factor;\r\n            let pos: Vector2D = { x: mark, y: this.vp.y1 };\r\n            pos = this.getAbsCoord(pos, true);\r\n            this.ctx.fillText(mark + \"\", pos.x - (mark.toString().length * 3), this.bordertop - 5);\r\n        }\r\n        //Z\r\n        for (let i = Math.ceil(this.vp.y1 / factor); i <= Math.floor(this.vp.y2 / factor); i++) {\r\n            const mark = i * factor;\r\n            let pos: Vector2D = { x: this.vp.x1, y: mark };\r\n            pos = this.getAbsCoord(pos, true);\r\n            this.ctx.fillText(mark + \"\", this.borderleft - 30, pos.y + 4);\r\n        }\r\n    }\r\n\r\n    private drawStaticUI() {\r\n        //clear;\r\n        this.ctx.font = \"normal 12px 'Montserrat'\";\r\n        this.ctx.fillStyle = this.config.uiBackgroundColor;\r\n        this.ctx.fillRect(0, 0, this.width, this.bordertop);\r\n        this.ctx.fillRect(0, 0, this.borderleft, this.height);\r\n\r\n        //Border\r\n        this.ctx.lineWidth = 1;\r\n        this.ctx.beginPath();\r\n        this.ctx.fillStyle = this.config.strokeColor;\r\n        this.ctx.strokeStyle = this.config.strokeColor;\r\n        this.ctx.moveTo(this.width - this.borderright, this.bordertop - 1);\r\n        this.ctx.lineTo(this.borderleft - 1, this.bordertop - 1);\r\n        this.ctx.lineTo(this.borderleft - 1, this.height - this.borderbottom);\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();\r\n\r\n        this.ctx.strokeStyle = \"#333333\";\r\n        this.ctx.fillStyle = \"#333333\";\r\n        //North\r\n        this.ctx.lineWidth = 0.7;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(15, 5);\r\n        this.ctx.lineTo(5, 30);\r\n        this.ctx.lineTo(15, 20);\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(15, 20);\r\n        this.ctx.lineTo(25, 30);\r\n        this.ctx.lineTo(15, 5);\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();\r\n        this.ctx.fillText(\"N\", 10, 40);\r\n        this.ctx.font = \"normal 15px 'Montserrat'\";\r\n        this.ctx.fillText(\"Seed: \" + this.seed.toString(), this.borderleft, 20);\r\n\r\n        //Axisnames\r\n        //X\r\n        this.ctx.font = \"normal 20px 'Montserrat'\";\r\n        const mapwidthcenter = this.borderleft + ((this.width - this.borderleft - this.borderright) / 2);\r\n        this.ctx.fillText(\"X\", mapwidthcenter - 10, 20);\r\n        this.ctx.lineWidth = 0.4;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(mapwidthcenter + 5, 13);\r\n        this.ctx.lineTo(mapwidthcenter + 17, 13);\r\n        this.ctx.lineTo(mapwidthcenter + 14, 10);\r\n        this.ctx.stroke();\r\n        this.ctx.moveTo(mapwidthcenter + 17, 13);\r\n        this.ctx.lineTo(mapwidthcenter + 14, 16);\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();\r\n        //Z\r\n        const mapheightcenter = this.bordertop + ((this.height - this.bordertop - this.borderbottom) / 2);\r\n        this.ctx.fillText(\"Z\", 7.5, mapheightcenter - 5);\r\n        this.ctx.lineWidth = 0.4;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(13, mapheightcenter);\r\n        this.ctx.lineTo(13, mapheightcenter + 12);\r\n        this.ctx.lineTo(10, mapheightcenter + 9);\r\n        this.ctx.stroke();\r\n        this.ctx.moveTo(13, mapheightcenter + 12);\r\n        this.ctx.lineTo(16, mapheightcenter + 9);\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    private drawGrid() {\r\n        const factor = 16;\r\n        this.ctx.strokeStyle = this.config.strokeColor;\r\n        //X\r\n        for (let i = Math.ceil(this.vp.x1 / factor); i <= Math.floor(this.vp.x2 / factor); i++) {\r\n            this.ctx.lineWidth = (i === 0) ? 0.8 : 0.5;\r\n            const mark = i * factor;\r\n            let pos: Vector2D = { x: mark, y: this.vp.y1 };\r\n            pos = this.getAbsCoord(pos, true);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(pos.x, this.bordertop);\r\n            this.ctx.lineTo(pos.x, this.height - this.borderbottom);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n        //Z\r\n        for (let i = Math.ceil(this.vp.y1 / factor); i <= Math.floor(this.vp.y2 / factor); i++) {\r\n            this.ctx.lineWidth = (i === 0) ? 0.8 : 0.5;\r\n            const mark = i * factor;\r\n            let pos: Vector2D = { x: this.vp.x1, y: mark };\r\n            pos = this.getAbsCoord(pos, true);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.borderleft, pos.y);\r\n            this.ctx.lineTo(this.width - this.borderright, pos.y);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n\r\n    private clearBorderRight() {\r\n        this.ctx.fillStyle = this.config.uiBackgroundColor;\r\n        this.ctx.fillRect(this.width - this.borderright, 0, this.borderright, this.height);\r\n    }\r\n\r\n    private isInVP(vec: Vector2D): boolean {\r\n        return (vec.x >= this.vp.x1 && vec.x <= this.vp.x2 &&\r\n            vec.y >= this.vp.y1 && vec.y <= this.vp.y2);\r\n    }\r\n\r\n    private isOverMap(vec: Vector2D): boolean {\r\n        return (\r\n            vec.x >= this.borderleft && vec.x <= (this.width - this.borderright) &&\r\n            vec.y >= this.bordertop && vec.y <= (this.height - this.borderbottom));\r\n    }\r\n\r\n    private getAbsCoord(vec: Vector2D): false | Vector2D;\r\n    private getAbsCoord(vec: Vector2D, ignoreBorder: true): Vector2D;\r\n    private getAbsCoord(vec: Vector2D, ignoreBorder: boolean = false): false | Vector2D {\r\n        if (this.isInVP(vec) || ignoreBorder) {\r\n            const vec2 = { ...origin };\r\n            vec2.x = ((Math.floor(vec.x) - this.vp.x1) * this.zoom) + this.borderleft;\r\n            vec2.y = ((Math.floor(vec.y) - this.vp.y1) * this.zoom) + this.bordertop;\r\n            return vec2;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getMapCoord(vec: Vector2D): false | Vector2D {\r\n        if (this.isOverMap(vec)) {\r\n            const vec2: Vector2D = { ...origin };\r\n            vec2.x = Math.round((vec.x - this.borderleft) / this.zoom);\r\n            vec2.y = Math.round((vec.y - this.bordertop) / this.zoom);\r\n            vec2.x += this.vp.x1;\r\n            vec2.y += this.vp.y1;\r\n            return vec2;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private calcViewport(): AABB {\r\n        const v: Partial<AABB> = {};\r\n        let mapWidth = this.width - this.borderleft - this.borderright;\r\n        let mapHeight = this.height - this.bordertop - this.borderbottom;\r\n        mapWidth /= this.zoom;\r\n        mapHeight /= this.zoom;\r\n        v.x1 = Math.floor((this.xPos - (mapWidth / 2)));\r\n        v.y1 = Math.floor((this.yPos - (mapHeight / 2)));\r\n        v.x2 = Math.ceil((this.xPos + (mapWidth / 2)));\r\n        v.y2 = Math.ceil((this.yPos + (mapHeight / 2)));\r\n        return v as AABB;\r\n    }\r\n\r\n    /**\r\n     * takes a number, vector or area and applies the given (arithmetic) function to each value.\r\n     */\r\n    private doMath(number: number, f: (x: number) => number): number;\r\n    private doMath(vec: Vector2D, f: (x: number) => number): Vector2D;\r\n    private doMath(area: AABB, f: (x: number) => number): AABB;\r\n    private doMath(arg: number | Vector2D | AABB, f: (x: number) => number): number | Vector2D | AABB;\r\n    private doMath(arg: number | Vector2D | AABB, f: (x: number) => number): number | Vector2D | AABB {\r\n        if (this.isVector2D(arg)) {\r\n            return {\r\n                x: this.doMath(arg.x, f),\r\n                y: this.doMath(arg.y, f)\r\n            };\r\n        }\r\n        else if (this.isAABB(arg)) {\r\n            const v2s = getV2sfromAABB(arg);\r\n            return getAABBfromV2s(this.doMath(v2s.p1, f), this.doMath(v2s.p2, f));\r\n        }\r\n        return f(arg);\r\n    }\r\n\r\n    public ChunkToCoord(number: number): number;\r\n    public ChunkToCoord(vec: Vector2D): Vector2D;\r\n    public ChunkToCoord(area: AABB): AABB;\r\n    public ChunkToCoord(arg: number | Vector2D | AABB): number | Vector2D | AABB {\r\n        return this.doMath(arg, x => x * 16);\r\n    }\r\n\r\n    private isVector2D(vec: any): vec is Vector2D {\r\n        if (typeof vec !== \"object\") {\r\n            return false;\r\n        }\r\n        const keys = Object.keys(vec);\r\n        return keys.length === 2 && typeof vec.x === \"number\" && typeof vec.y === \"number\";\r\n    }\r\n\r\n    private isAABB(vec: any): vec is AABB {\r\n        if (typeof vec !== \"object\") {\r\n            return false;\r\n        }\r\n        const keys = Object.keys(vec);\r\n        return keys.length === 4 && typeof vec.x1 === \"number\" && typeof vec.y1 === \"number\" && typeof vec.x2 === \"number\" && typeof vec.y2 === \"number\";\r\n    }\r\n\r\n}\r\n\r\n(window as any).SlimeMap = SlimeMap;\r\n","\"use strict\";/*! ctxMenu v1.0 | (c) Nikolaj Kappler | https://github.com/nkappler/ctxmenu/blob/master/LICENSE !*/function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError(\"Cannot call a class as a function\")}var ContextMenu=function(){function a(){var b=this;_classCallCheck(this,a),this.cache={},this.dir=\"r\",window.addEventListener(\"click\",function(){return b.closeMenu()}),window.addEventListener(\"resize\",function(){return b.closeMenu()}),window.addEventListener(\"scroll\",function(){return b.closeMenu()})}return a.prototype.attach=function(a,b){var c=this,d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:function(a){return a},e=document.querySelector(a);if(void 0!==this.cache[a])return void console.error(\"target element \"+a+\" already has a context menu assigned. Use ContextMenu.update() intstead.\");if(!e)return void console.error(\"target element \"+a+\" not found\");var f=function(a){a.stopImmediatePropagation(),c.closeMenu(),c.dir=\"r\";var e=d([].concat(b),a);c.menu=c.generateDOM(e,a),document.body.appendChild(c.menu),a.preventDefault()};this.cache[a]={ctxmenu:b,handler:f},e.addEventListener(\"contextmenu\",f)},a.prototype.update=function(a,b){var c=this.cache[a],d=document.querySelector(a);d&&d.removeEventListener(\"contextmenu\",c&&c.handler),delete this.cache[a],this.attach(a,b)},a.prototype.delete=function(a){var b=this.cache[a];if(!b)return void console.error(\"no context menu for target element \"+a+\" found\");var c=document.querySelector(a);return c?void(c.removeEventListener(\"contextmenu\",b.handler),delete this.cache[a]):void console.error(\"target element \"+a+\" does not exist (anymore)\")},a.prototype.closeMenu=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.menu;if(a){a===this.menu&&delete this.menu;var b=a.parentElement;b&&b.removeChild(a)}},a.prototype.debounce=function(a,b){var c;a.addEventListener(\"mouseenter\",function(a){c=setTimeout(function(){return b(a)},150)}),a.addEventListener(\"mouseleave\",function(){return clearTimeout(c)})},a.prototype.generateDOM=function(b,c){var d=this,e=document.createElement(\"ul\");0===b.length&&(e.style.display=\"none\"),b.forEach(function(b){var c=document.createElement(\"li\");d.debounce(c,function(){var a=c.parentElement&&c.parentElement.querySelector(\"ul\");a&&a.parentElement!==c&&d.closeMenu(a)}),a.itemIsDivider(b)?c.className=\"divider\":(c.innerHTML=\"<span>\"+b.text+\"</span>\",c.title=b.tooltip||\"\",a.itemIsInteractive(b)?b.disabled?(c.className=\"disabled\",a.itemIsSubMenu(b)&&(c.className=\"disabled submenu\")):(c.className=\"interactive\",a.itemIsAction(b)?c.addEventListener(\"click\",b.action):a.itemIsAnchor(b)?c.innerHTML=\"<a href=\\\"\"+b.href+\"\\\" target=\\\"\"+(b.target||\"\")+\"\\\">\"+b.text+\"</a>\":0===b.subMenu.length?c.className=\"disabled submenu\":(c.className=\"interactive submenu\",d.debounce(c,function(a){var e=c.querySelector(\"ul\");e||d.openSubMenu(a,b.subMenu,c)}))):(c.style.fontWeight=\"bold\",c.style.marginLeft=\"-5px\")),e.appendChild(c)}),e.style.position=\"fixed\",e.className=\"ctxmenu\";var f=a.getBounding(e),g={x:0,y:0};if(c instanceof Element){var h=c.getBoundingClientRect();g={x:\"r\"===this.dir?h.left+h.width:h.left-f.width,y:h.top-4},g.x!==this.getPosition(f,g).x&&(this.dir=\"r\"===this.dir?\"l\":\"r\",g.x=\"r\"===this.dir?h.left+h.width:h.left-f.width)}else g=this.getPosition(f,{x:c.clientX,y:c.clientY});return e.style.left=g.x+\"px\",e.style.top=g.y+\"px\",e.addEventListener(\"contextmenu\",function(a){a.stopPropagation(),a.preventDefault()}),e.addEventListener(\"click\",function(a){var b=a.target&&a.target.parentElement;b&&\"interactive\"!==b.className&&a.stopPropagation()}),e},a.prototype.openSubMenu=function(a,b,c){var d=c.parentElement&&c.parentElement.querySelector(\"li > ul\");d&&d.parentElement!==c&&this.closeMenu(d),c.appendChild(this.generateDOM(b,c))},a.getBounding=function(a){var b=a.cloneNode(!0);b.style.visibility=\"hidden\",document.body.appendChild(b);var c=b.getBoundingClientRect();return document.body.removeChild(b),c},a.prototype.getPosition=function(a,b){return{x:\"r\"===this.dir?b.x+a.width>window.innerWidth?window.innerWidth-a.width:b.x:0>b.x?0:b.x,y:b.y+a.height>window.innerHeight?window.innerHeight-a.height:b.y}},a.itemIsInteractive=function(a){return this.itemIsAction(a)||this.itemIsAnchor(a)||this.itemIsSubMenu(a)},a.itemIsAction=function(a){return a.hasOwnProperty(\"action\")},a.itemIsAnchor=function(a){return a.hasOwnProperty(\"href\")},a.itemIsDivider=function(a){return a.hasOwnProperty(\"isDivider\")},a.itemIsSubMenu=function(a){return a.hasOwnProperty(\"subMenu\")},a}();window.ContextMenu=new ContextMenu,document.addEventListener(\"readystatechange\",function(){if(\"interactive\"===document.readyState){var a=document.createElement(\"style\");a.innerHTML=\".ctxmenu{border:1px solid #999;padding:2px 0;box-shadow:3px 3px 3px #aaa;background:#fff;margin:0;font-size:15px;font-family:Verdana,sans-serif;z-index:9999}.ctxmenu li{margin:1px 0;display:block;position:relative}.ctxmenu li span,.ctxmenu li a{display:block;padding:2px 20px;cursor:default}.ctxmenu li a{color:inherit;text-decoration:none}.ctxmenu li.disabled{color:#ccc}.ctxmenu li.divider{border-bottom:1px solid #aaa;margin:5px 0}.ctxmenu li.interactive:hover{background:rgba(0,0,0,0.1)}.ctxmenu li.submenu::after{content:'>';position:absolute;display:block;top:0;right:0.3em;font-family:monospace;line-height:22px}\",document.head.insertBefore(a,document.head.childNodes[0])}});\r\n","import Long from \"long\";\r\nimport { NSeededRandom } from \"./seededRandom\";\r\nimport { Vector2D } from \"./slimeMap\";\r\n\r\nconst base = new Long(4987142);\r\nconst addend1 = new Long(5947611);\r\nconst addend2 = new Long(4392871);\r\nconst addend3 = new Long(389711);\r\nconst mask = new Long(987234911);\r\n\r\nexport class SlimeChunkHandler {\r\n    private cache: { [key: string]: boolean | undefined } = {};\r\n\r\n    public constructor(private seed: Long) { }\r\n\r\n    public isSlimeChunk(chunk: Vector2D) {\r\n        const key = `[${chunk.x},${chunk.y}]`;\r\n        if (this.cache[key] === undefined) {\r\n            this.cache[key] = isSlimeChunk(chunk, this.seed);\r\n        }\r\n        return this.cache[key];\r\n    }\r\n\r\n    public updateSeed(seed: Long) {\r\n        this.seed = seed;\r\n        delete this.cache;\r\n        this.cache = {};\r\n    }\r\n}\r\n\r\nexport function isSlimeChunk(chunk: Vector2D, seed: Long) {\r\n    const xPos = chunk.x;\r\n    const zPos = chunk.y;\r\n    const tempseed = base.multiply(xPos).multiply(xPos)\r\n        .add(addend1.multiply(xPos))\r\n        .add(addend2.multiply(zPos).multiply(zPos))\r\n        .add(addend3.multiply(zPos))\r\n        .add(seed).xor(mask);\r\n\r\n    const rnd = new NSeededRandom(tempseed);\r\n    return (rnd.nextInt(10) === 0);\r\n}\r\n","import Long, { ONE, ZERO } from \"long\";\r\n\r\ninterface ISeededRandom {\r\n    nextInt: (b: number) => number;\r\n}\r\n\r\nconst nmultiplier = new Long(0xDEECE66D, 0x5);\r\nconst naddend = new Long(0xB);\r\nconst nmask = new Long(0xFFFFFFFF, 0xFFFF);\r\n\r\nexport class NSeededRandom implements ISeededRandom {\r\n    private seed: Long;\r\n\r\n    public constructor(initseed: Long) {\r\n        this.seed = this.initialScramble(initseed);\r\n    }\r\n\r\n    private initialScramble(seed: Long) {\r\n        return seed.xor(nmultiplier).and(nmask);\r\n    }\r\n\r\n    private next(bits: number) {\r\n        this.seed = this.seed.multiply(nmultiplier).add(naddend).and(nmask);\r\n        return this.seed.shiftRight(48 - bits);\r\n    }\r\n\r\n    public nextInt(b: number) {\r\n        const bound = new Long(Math.abs(b));\r\n        if (bound.and(bound.negate()).isZero()) { // i.e., bound is a power of 2\r\n            return (bound.multiply(this.next(31)).shiftRight(31)).toInt();\r\n        }\r\n        // tslint:disable-next-line:one-variable-per-declaration\r\n        let bits: Long, val: Long;\r\n        do {\r\n            bits = this.next(31);\r\n            val = bits.modulo(bound);\r\n        } while (bits.sub(val).add(bound.sub(ONE)).lessThan(ZERO));\r\n        return val.toInt();\r\n    }\r\n}\r\n"],"sourceRoot":""}